name: Bootstrap Complete Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to bootstrap (dev, staging, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      confirm:
        description: 'Type "CONFIRM" to proceed with bootstrap'
        required: true
        type: string

env:
  AWS_REGION: ap-south-1

jobs:
  validate-input:
    runs-on: ubuntu-latest
    steps:
      - name: Check confirmation
        if: ${{ github.event.inputs.confirm != 'CONFIRM' }}
        run: |
          echo "You must type CONFIRM to proceed with bootstrap"
          exit 1

  setup:
    needs: validate-input
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      - name: Terraform Init + Apply
        uses: dflook/terraform-apply@v1
        with:
          path: terraform
          workspace: ${{ github.event.inputs.environment }}
          auto_approve: true

  build-application-ami:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: '1.9.4'
      
      - name: Prepare deploy folder
        run: |
          mkdir -p deploy
          echo "<html><body><h1>Hello from AMI!</h1></body></html>" > deploy/index.html
      
      - name: Install Packer plugins
        run: |
          packer plugins install github.com/hashicorp/amazon
      
      - name: Run Packer Build
        run: |
          packer validate packer/application.json
          packer build -var "app_version=v1.0.${{ github.run_number }}" packer/application.json


  deploy:
    needs: [setup, build-application-ami]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update Launch Template AMI
        run: |
          echo "Updating launch template with latest AMI (retrieved separately)"
          # Simplified logic for updating launch templates or use Terraform variables

  verify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Wait for app availability
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://${{ steps.get_output.outputs.alb_dns_name }}
          max-attempts: 30
          retry-delay: 10s

      - name: Mark Bootstrap Success
        run: |
          echo "{\"status\":\"bootstrapped\",\"actor\":\"${{ github.actor }}\",\"timestamp\":\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}" > status.json
          aws s3 cp status.json s3://tf-state-aws-infra01/secure-app-infra/workflow-status.json
